name: Backend test
on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: components/backend
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Test with pytest
        env:
          DB_NAME: postgres
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
        run: |
          docker run --rm --name postgres -e POSTGRES_PASSWORD=${DB_PASSWORD} -p 5432:5432 -d postgres:13
          docker run --rm -e TARGETS=${DB_HOST}:${DB_PORT} -e TIMEOUT=600 --net=host  waisbrot/wait
          pytest --cov=backend
